@charset "utf-8";

/* Robot PJ 메인 CSS - robot.css */

/* 초기화 */
html, body, h1, h2, p, ol, ul{
    margin: 0;
    padding: 0;
}

/********** 공통 클래스 **********/
/* 메탈소재1 배경 */
.mt1{
    background: url(../images/metal01.jpg) no-repeat center/cover;
}
/* 메탈소재2 배경 */
.mt2{
    background: url(../images/metal02.jpg) no-repeat center/cover;
}

body{
    background: url(../images/bg.jpg) no-repeat fixed top/cover;
}

/* 공사중표시 */
body *{
    outline: 2px dashed yellow;
}

/*************************** 1. 상단영역 ***************************/


/*************************** 2. 메인영역 ***************************/
/* 2-1. 로봇박스 */
.robx{
    /* 패딩 위, 아래 */
    padding: 200px 0 400px;
}

/* 로봇머리 */
.head{
    position: relative;
    /* 부모자격 하위 div들 */
    width: 250px;
    height: 150px;
    /* 마영오! */
    margin: 0 auto;
    /* border-radius: 50px 50px 100px 100px; */
    /* clip-path: polygon(0 0, 0 50%, 30% 100%, 70% 100%, 100% 50%,100% 0); */
}
/* 로봇머리 직계하위 div는 모두 앱솔루트 */
.head>div{
    position: absolute;
}

/* 로봇 머리에 가상요소로 머리털박스 만들기 */
.head::before{
    content: '';
    display: block;
    position: absolute;
    z-index: 1;
    top: -230px;
    left: -40px;
    /* 부모는? .head */
    width: 330px;
    height: 500px;
    background: url(../images/hair.png) no-repeat 0/100% 100%;
}
/* 머리박스에 오버시 가상요소 가발변경하기 */
.head:hover::before{
    width: 500px;
    top: -100px;
    left: -175px;
    background: url(../images/hair2.png) no-repeat 0/100% 100%;
}
/* 머리박스 가상요소로 턱만들기 */
.head::after{
    content: '';
    display: block;
    position: absolute;
    top: 100%;
    /* 부모박스 높이만큼 밀어준다! */
    z-index: -1;
    width: 250px;
    height: 100px;
    background-color: #000;
    background: url(../images/metal01.jpg) no-repeat bottom/100%;
    clip-path: polygon(0 0, 23% 100%, 77% 100%,100% 0);
}

/* 눈공통 */
.eye{
    width: 50px;
    height: 50px;

    /* 배경공통 */
    background-color: #fff;
    background-repeat: no-repeat;
    background-position: center;
    background-size: 100% 100%;

    /* 둥근모서리 : 50% 원 */
    border-radius: 50%;
    /* 보더 이중선 : double */
    border: 4px double #000;
}
/* 왼쪽 눈 */
.e1{
    top: 50px;
    left: 50px;
    background-image: url(../images/e1.jpg);
}
/* 오른쪽 눈 */
.e2{
    top: 50px;
    right: 50px;
    background-image: url(../images/e2.jpg);
}
/* 코  */
.nose{
    top: 90px;
    left: 100px;
    width: 50px;
    height: 70px;
    background: url(../images/nose.jpg) no-repeat 0/110% 100%;
    /* 둥근 모서리 */
    border-radius: 30px;
}
/* 입 */
.mouth{
    top: 180px;
    left: 85px;
    width: 80px;
    height: 40px;
    background: url(../images/mouth.png) no-repeat 0/100% 100%;
}

/* 입옆에 별모양점 가상요소로 만들기 */
.mouth::before, .mouth::after{
    content: "";
    display: block;
    position: absolute;
    top: -25px;
    right: -25px;
    /* 부모는? .mouth */
    width: 20px;
    height: 20px;
    background-color: rgb(89, 0, 255);

    /* 삼각형 클리핑 속성으로 만들기 */
    clip-path: polygon(0 100%, 50% 0, 100% 100%);
}
.mouth::after{
    transform: rotate(180deg) translateY(-30%);
}
/* 
    [ CSS 클리핑 속성 ]
    -> clip-path : polygon(x1 y1,x2 y2,...)
    -> 각 좌표쌍은 띄어쓰기로 각 점은 콤마로 구분
    -> 각 점을 연결하여 도형모양만 출력한다!
    -> px은 각 도형 크기 내부의 수치로 쓰고
    %는 도형을 기준한 위치를 %로 나타낸다!
*/

/* 귀 공통 */
.ear{
    top: 75px;
    width: 55px;
    height: 75px;
}
/* 왼귀 */
.er1{
    left: -55px;
    border-radius: 30px 0 0 30px;
}

/* 오른귀 */
.er2{
    right: -55px;
    border-radius: 0 30px 30px 0;
}


/*************************** 3. 하단영역 ***************************/

